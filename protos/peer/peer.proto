syntax = "proto3";

package cn.zumium.fyer.peer;
option go_package = "peer";
option java_package = "cn.zumium.fyer.proto.peer";

import "google/protobuf/empty.proto";

message DeployRequest {
    enum SourceType {
        CLIENT = 0;
        PEER = 1;
    }
    string name = 1;
    bytes frag = 2;
    string src = 3;
    SourceType src_type = 4;
}

// message DeployResponse {
//     enum Status {
//         ERROR = 0;
//         OK = 1;
//     }
//     Status status = 1;
//     string msg = 2;
// }

message FetchRequest {
    string name = 1;
    uint64 frag_index = 2;
}

message FetchResponse {
    bytes data = 1;
}

//message FragInfoRequest {
//    enum InfoType {
//        ALL = 0;
//        FRAG = 1;
//    }
//    string name = 1;
//    InfoType itype = 2;
//    uint64 frag_index = 3;
//}

//message FragInfoResponse {
//    message FInfo {
//        uint64 frag_index = 1;
//        bytes hash = 2;
//    }
//    // enum Status {
//    //     NOT_FOUND = 0;
//    //     OK = 1;
//    //     NOT_READY = 2;
//    //     ERROR = 3;
//    // }
//    // Status status = 1;
//    // string msg = 2;
//
//    map<uint64, FInfo> infos = 3;
//}

service FyerPeer {
    rpc Deploy (DeployRequest) returns (google.protobuf.Empty);
    rpc Fetch (FetchRequest) returns (FetchResponse);
//    rpc FragInfo (FragInfoRequest) returns (FragInfoResponse);
}
